apiVersion: v1
kind: Namespace
metadata:
  name: dpl
  labels:
    name: dpl
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bad-dpl
  namespace: dpl
  labels:
    app: dpl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dpl
  template:
    metadata:
      labels:
        app: dpl
    spec:
      containers:
        - name: pause
          image: public.ecr.aws/eks-distro/kubernetes/pause:3.8
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: dockersock
              mountPath: '/var/run/docker.sock'
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: good-dpl
  namespace: dpl
  labels:
    app: dpl
spec:
  replicas: 3
  minReadySeconds: 10
  selector:
    matchLabels:
      app: dpl
  template:
    metadata:
      labels:
        app: dpl
    spec:
      securityContext:
        runAsUser: 10001
        runAsGroup: 20001
        fsGroup: 30001
      containers:
        - name: pause
          image: public.ecr.aws/eks-distro/kubernetes/pause:3.8
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
              ephemeral-storage: 100M
            limits:
              cpu: 100m
              memory: 100Mi
              ephemeral-storage: 100M
          securityContext:
            readOnlyRootFilesystem: true
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: tmp
          hostPath:
            path: /tmp
