# EKS Cluster Upgrade: {{ current_version }} -> {{ target_version }}

### Table of Contents

1. [Pre-Upgrade](#pre-upgrade)
2. [Upgrade](#upgrade)
3. [Post-Upgrade](#post-upgrade)
4. [References](#references)

## Pre-Upgrade

1. Compare the Kubernetes version of your cluster control plane to the Kubernetes version of your nodes. Before updating your control plane to a new Kubernetes version, make sure that the Kubernetes minor version of both the managed nodes and Fargate nodes in your cluster are the same as your control plane's version.

Control plane Kubernetes version:
```sh
kubectl version --short
```

Nodes Kubernetes version:
```sh
kubectl get nodes
```

2. Verify that there are at least 5 free IPs in the VPC subnets used by the control plane. Amazon EKS creates new cluster elastic network interfaces (network interfaces) in any of the subnets specified for the control plane.

```sh
aws ec2 describe-subnets --subnet-ids \
  $(aws eks describe-cluster --name {{ cluster_name }} --region {{ region }} \
  --query 'cluster.resourcesVpcConfig.subnetIds' --output text) \
  --region {{ region }} --query 'Subnets[*].AvailableIpAddressCount'
```

3. Check that the security groups allow the necessry cluster communication
  - If the current cluster primary security group was deleted, then only route is blue/green upgrade
  - What steps/actions do we provide here?

4. Check Kubernetes version prerequisites
  - You can utilize https://github.com/FairwindsOps/pluto to scan your Kubernetes manifests for deprecated/removed API versions

{{#if is_self_managed_node_group }}
5. It is recommended to utilize the instance refresh capability of the for self-managed node group Autoscaling group in conjunction with `node-termination-handler`
{{/if}}

{{#if is_eks_managed_node_group }}
5. It is recommended to set an update configuration of `max_unavailable_percent` to `30` to start
{{/if}}

## Upgrade

### High Level Overview

1. Upgrade the control plane
2. Upgrade the data plane
3. Upgrade addons (`kube-proxy`, `coredns`, `vpc-cni`, `cluster-autoscaler`, etc.)
4. Update applications running on the cluster as needed
5. [Optional] Update CLI versions
    - kubectl
    - awscli (v1alpha1 -> v1beta1 for `aws eks update-kubeconfig`)

### Process

{{#each upgrade_steps }}
{{@index}}. {{ this }}
{{/each}}

    - [EKS Managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/update-managed-node-group.html)
    - [Self-managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/update-workers.html)
    - Fargate profiles: Any new pods that are launched on Fargate have a kubelet version that matches your cluster version. Existing Fargate pods aren't changed.

## Post Upgrade

- TODO

## References

{{#if k8s_deprecation_url }}
- [Kubernetes `{{ target_version }}` API deprecations]({{ k8s_deprecation_url }})
{{/if}}
- [Kubernetes `{{ target_version }}` release announcement]({{ k8s_release_url }})
- [EKS `{{ target_version }}` release notes](https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html#kubernetes-{{ target_version }})
